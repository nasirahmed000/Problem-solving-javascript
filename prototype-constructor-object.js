// JavaScript-ржПрж░ prototype рж╣ржЪрзНржЫрзЗ ржПржХржЯрж┐ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржзрж╛рж░ржгрж╛, ржпрж╛ Object-Oriented Programming (OOP)-ржПрж░ ржнрж┐рждрзНрждрж┐ рждрзИрж░рж┐ ржХрж░рзЗред
// рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрж▓рж▓рзЗ тАФ prototype рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ ржЕржмржЬрзЗржХрзНржЯ (object) ржпрзЗржЯрж╛ ржЕржирзНржп ржЕржмржЬрзЗржХрзНржЯрзЗрж░ ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ (property) ржУ ржорзЗржержб (method) рж╢рзЗрзЯрж╛рж░ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

// ЁЯза рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛:

// ржпржЦржи рждрзБржорж┐ JavaScript-ржП ржХрзЛржирзЛ object ржмрж╛ constructor function рждрзИрж░рж┐ ржХрж░рзЛ, рждржЦржи рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ ржПржХржЯрж┐ prototype object рждрзИрж░рж┐ рж╣рзЯред
// ржПржЗ prototype-ржПрж░ ржнрзЗрждрж░рзЗ рждрзБржорж┐ ржпрзЗрж╕ржм ржорзЗржержб ржмрж╛ ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ рж░рж╛ржЦрзЛ, рж╕рзЗржЧрзБрж▓рзЛ ржР constructor ржжрж┐рзЯрзЗ рждрзИрж░рж┐ рж╕ржм object ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗ тАФ ржХрж┐ржирзНрждрзБ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ ржкрзНрж░рждрж┐ржЯрж┐рждрзЗ ржХржкрж┐ рж╣рзЯ ржирж╛ред

// ЁЯзй ржЙржжрж╛рж╣рж░ржг:
// // ржПржХржЯрж┐ Constructor Function рждрзИрж░рж┐ ржХрж░рж┐
// function Person(name, age) {
//   this.name = name;
//   this.age = age;
// }

// // Prototype-ржП ржПржХржЯрж┐ ржорзЗржержб ржпрзЛржЧ ржХрж░рж╛ рж╣рж▓рзЛ
// Person.prototype.sayHello = function() {
//   console.log("Hello, my name is " + this.name);
// };

// // ржирждрзБржи ржжрзБржЯрж┐ ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рж▓рзЛ
// const person1 = new Person("Nasir", 25);
// const person2 = new Person("Amin", 30);

// person1.sayHello(); // ржЖржЙржЯржкрзБржЯ: Hello, my name is Nasir
// person2.sayHello(); // ржЖржЙржЯржкрзБржЯ: Hello, my name is Amin

// ЁЯФН ржПржЦрж╛ржирзЗ ржХрзА ржШржЯржЫрзЗ:

// Person рж╣рж▓рзЛ ржПржХржЯрж┐ constructor functionред

// Person.prototype-ржП ржЖржорж░рж╛ sayHello() ржирж╛ржорзЗрж░ ржПржХржЯрж┐ ржорзЗржержб ржпрзЛржЧ ржХрж░рзЗржЫрж┐ред

// person1 ржУ person2 ржЙржнрзЯржЗ Person ржерзЗржХрзЗ рждрзИрж░рж┐, рждрж╛ржЗ рждрж╛рж░рж╛ prototype chain ржПрж░ ржорж╛ржзрзНржпржорзЗ sayHello() ржорзЗржержб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗред

// ржХрж┐ржирзНрждрзБ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржмржЬрзЗржХрзНржЯрзЗрж░ ржоржзрзНржпрзЗ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ sayHello() ржХржкрж┐ рж╣рзЯржирж┐ тАФ ржмрж░ржВ рж╢рзЗрзЯрж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ Person.prototype ржерзЗржХрзЗред

// тЪЩя╕П Prototype Chain ржзрж╛рж░ржгрж╛:

// ржпржЦржи JavaScript ржХрзЛржирзЛ ржЕржмржЬрзЗржХрзНржЯрзЗрж░ ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ ржЦрзБржБржЬрзЗ ржкрж╛рзЯ ржирж╛, рждржЦржи рж╕рзЗ ржР ржЕржмржЬрзЗржХрзНржЯрзЗрж░ prototype ржП ржЧрж┐рзЯрзЗ ржЦрзЛржБржЬрзЗред
// ржпржжрж┐ рж╕рзЗржЦрж╛ржирзЗржУ ржирж╛ ржкрж╛рзЯ, рждржмрзЗ ржЖржмрж╛рж░ рждрж╛рж░ prototype-ржПрж░ prototype ржП ржпрж╛рзЯ тАФ ржПржХрзЗ ржмрж▓рзЗ Prototype Chainред

// ЁЯз╛ ржЫрзЛржЯ ржЖрж░рзЗржХржЯрж╛ ржЙржжрж╛рж╣рж░ржг:
// const arr = [1, 2, 3];

// // ржПржЦрж╛ржирзЗ arr ржПржХржЯрж┐ Array object
// console.log(arr.__proto__ === Array.prototype); // true

// // Array.prototype-ржП ржЕржирзЗржХ ржорзЗржержб ржерж╛ржХрзЗ ржпрзЗржоржи push, pop ржЗрждрзНржпрж╛ржжрж┐
// arr.push(4);
// console.log(arr); // [1, 2, 3, 4]


// ЁЯСЙ ржЕрж░рзНржерж╛рзО push() ржорзЗржержбржЯрж╛ рж╕рж░рж╛рж╕рж░рж┐ arr ржПрж░ ржоржзрзНржпрзЗ ржирзЗржЗ,
// ржмрж░ржВ Array.prototype ржерзЗржХрзЗ ржЗржирж╣рзЗрж░рж┐ржЯ (inherit) ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

// ЁЯУШ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
// ржмрж┐рж╖рзЯ	ржмрзНржпрж╛ржЦрзНржпрж╛
// Prototype	ржЕржмржЬрзЗржХрзНржЯ ржпрзЗржЦрж╛ржи ржерзЗржХрзЗ ржЕржирзНржп ржЕржмржЬрзЗржХрзНржЯ ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ ржУ ржорзЗржержб ржирзЗрзЯ
// Prototype Chain	ржПржХрзЗрж░ ржкрж░ ржПржХ ржкрзНрж░рзЛржЯрзЛржЯрж╛ржЗржк ржЕржмржЬрзЗржХрзНржЯрзЗрж░ рж▓рж┐ржВржХ
// ржмрзНржпржмрж╣рж╛рж░	ржХрзЛржб ржкрзБржиржГржмрзНржпржмрж╣рж╛рж░ (reuse) ржУ ржЗржирж╣рзЗрж░рж┐ржЯрзЗржирзНрж╕рзЗрж░ ржЬржирзНржп

// ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛ржХрзЗ class ржУ prototype-ржПрж░ ржоржзрзНржпрзЗ рж╕ржорзНржкрж░рзНржХ ржмрж╛ prototype inheritance ржирж┐рзЯрзЗржУ ржмрж╛ржВрж▓рж╛рзЯ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рждрзЗ ржкрж╛рж░рж┐ тАФ ржмрж▓ржмрзЗ ржХрж┐ ржЖржорж┐ рж╕рзЗржЯрж╛ ржжрзЗржЦрж╛ржЗ?

// You said:
// what is constructor?
// ChatGPT said:

// ржЪржорзОржХрж╛рж░ ржкрзНрж░рж╢рзНржи, Nasir ЁЯСП
// JavaScript-ржПрж░ constructor рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ ржмрж┐рж╢рзЗрж╖ ржлрж╛ржВрж╢ржи (function), ржпрж╛ ржирждрзБржи ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд рж╣рзЯред

// ЁЯза рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрзБржЭрзЛ:

// ржпржЦржи рждрзБржорж┐ ржПржХржЗ рж░ржХржо ржЧржаржи ржмрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░рзЗрж░ ржЕржирзЗржХ ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рждрзЗ ржЪрж╛ржУ, рждржЦржи constructor function ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
// ржПржЯрж╛ ржПржХ ржзрж░ржирзЗрж░ template (ржЫрж╛ржБржЪ) тАФ ржпрзЗржЯрж╛ ржерзЗржХрзЗ ржЕржирзЗржХржЧрзБрж▓рзЛ ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рж╛ ржпрж╛рзЯред

// ЁЯзй ржЙржжрж╛рж╣рж░ржг:
// // Constructor Function
// function Person(name, age) {
//   this.name = name;
//   this.age = age;
// }

// // Constructor ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржирждрзБржи ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐
// const person1 = new Person("Nasir", 25);
// const person2 = new Person("Amin", 30);

// console.log(person1.name); // ржЖржЙржЯржкрзБржЯ: Nasir
// console.log(person2.age);  // ржЖржЙржЯржкрзБржЯ: 30

// ЁЯФН ржПржЦрж╛ржирзЗ ржХрзА ржШржЯржЫрзЗ:

// Person рж╣рж▓рзЛ ржПржХржЯрж┐ constructor functionред

// ржпржЦржи ржЖржорж░рж╛ new Person("Nasir", 25) рж▓рж┐ржЦрж┐, рждржЦржи JavaScript рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ ржХрзЯрзЗржХржЯрж┐ ржХрж╛ржЬ ржХрж░рзЗ:

// ржПржХржЯрж┐ ржирждрзБржи ржЦрж╛рж▓рж┐ object рждрзИрж░рж┐ ржХрж░рзЗред

// ржР object-ржХрзЗ this рж╣рж┐рж╕рзЗржмрзЗ constructor-ржПрж░ ржоржзрзНржпрзЗ ржкрж╛ржарж╛рзЯред

// constructor-ржПрж░ ржнрзЗрждрж░рзЗрж░ ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ржЧрзБрж▓рзЛ ржР ржирждрзБржи object-ржП ржпрзБржХрзНржд рж╣рзЯред

// рж╢рзЗрж╖рзЗ ржирждрзБржи object-ржЯрж┐ return ржХрж░рзЗред

// ЁЯз╛ ржнрж┐рждрж░рзЗрж░ ржХрж╛ржЬ (step by step):
// const person1 = new Person("Nasir", 25);


// ржПржЗ рж▓рж╛ржЗржиржЯрж┐ ржЪрж╛рж▓рж╛ржирзЛрж░ рж╕ржорзЯ:

// {} тЖТ ржПржХржЯрж┐ ржирждрзБржи object рждрзИрж░рж┐ рж╣рзЯ

// this тЖТ ржР object-ржХрзЗ ржирж┐рж░рзНржжрзЗрж╢ ржХрж░рзЗ

// this.name = "Nasir"

// this.age = 25

// ржирждрзБржи object (person1) ржлрзЗрж░ржд ржжрзЗржУрзЯрж╛ рж╣рзЯ

// тЪЩя╕П Prototype-ржПрж░ рж╕рж╛ржерзЗ рж╕ржорзНржкрж░рзНржХ:

// Constructor function-ржПрж░ рж╕рж╛ржерзЗ ржПржХржЯрж╛ prototype object ржерж╛ржХрзЗ,
// ржпрзЗржЯрж╛ ржжрж┐рзЯрзЗ ржЖржорж░рж╛ ржорзЗржержб рж╢рзЗрзЯрж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рж┐:

// Person.prototype.sayHello = function() {
//   console.log("Hello, my name is " + this.name);
// };

// person1.sayHello(); // Hello, my name is Nasir


// ЁЯСЙ ржЕрж░рзНржерж╛рзО, constructor рждрзИрж░рж┐ ржХрж░рзЗ ржЕржмржЬрзЗржХрзНржЯрзЗрж░ ржкрзНрж░ржкрж╛рж░рзНржЯрж┐, ржЖрж░ prototype рждрзИрж░рж┐ ржХрж░рзЗ рждрж╛ржжрзЗрж░ рж╢рзЗрзЯрж╛рж░ ржХрж░рж╛ ржорзЗржержбред

// ЁЯУШ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
// ржмрж┐рж╖рзЯ	ржмрзНржпрж╛ржЦрзНржпрж╛
// Constructor Function	ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд ржмрж┐рж╢рзЗрж╖ ржлрж╛ржВрж╢ржи
// new ржХрзАржУрзЯрж╛рж░рзНржб	constructor-ржХрзЗ ржмрж▓рзЗ ржирждрзБржи object ржмрж╛ржирж╛рждрзЗ
// Prototype	constructor-ржПрж░ рж╕рж╛ржерзЗ ржпрзБржХрзНржд рж╢рзЗрзЯрж╛рж░ ржХрж░рж╛ ржорзЗржержбржЧрзБрж▓рзЛрж░ ржЬрж╛рзЯржЧрж╛

// рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ ржПрж░ ржкрж░ constructor ржмржирж╛ржо class (ES6) рждрзБрж▓ржирж╛ ржХрж░рзЗ ржмрзБржЭрж┐рзЯрзЗ ржжрж┐рждрзЗ ржкрж╛рж░рж┐ тАФ ржпрж╛рждрзЗ ржжрзБржЯрзЛржЗ ржкрж░рж┐рж╖рзНржХрж╛рж░ рж╣рзЯред
// ржЪрж╛ржУ ржХрж┐ ржЖржорж┐ рж╕рзЗржЯрж╛ржУ ржжрзЗржЦрж╛ржЗ?

// You said:
// whaat javascript object?
// ChatGPT said:

// ржжрж╛рж░рзБржг ржкрзНрж░рж╢рзНржи, Nasir ЁЯСН
// JavaScript-ржП object рж╣ржЪрзНржЫрзЗ рж╕ржмржЪрзЗрзЯрзЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржПржмржВ ржорзМрж▓рж┐ржХ (fundamental) ржмрж┐рж╖рзЯржЧрзБрж▓рзЛрж░ ржПржХржЯрж┐ред
// рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрж▓рж▓рзЗ тАФ

// Object рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ ржЬрж┐ржирж┐рж╕ ржпрзЗржЦрж╛ржирзЗ рждрзБржорж┐ рждржерзНржп (data) ржУ ржХрж╛ржЬ (function) ржПржХрж╕рж╛ржерзЗ рж░рж╛ржЦрждрзЗ ржкрж╛рж░рзЛред

// ЁЯза рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛:

// JavaScript-ржП рж╕ржмржХрж┐ржЫрзБржЗ ржХрзЛржирзЛ ржирж╛ ржХрзЛржирзЛржнрж╛ржмрзЗ object тАФ ржпрзЗржоржи:
// Array, Function, Date, ржПржоржиржХрж┐ String, Number, Boolean тАФ рж╕ржмржЗ Object рж╣рж┐рж╕рзЗржмрзЗ ржХрж╛ржЬ ржХрж░рзЗред

// Object basically рж╣рж▓рзЛ key-value pair ржПрж░ ржПржХржЯрж╛ рж╕ржВржЧрзНрж░рж╣ (collection)ред

// ЁЯзй ржЙржжрж╛рж╣рж░ржг рзз: рж╕рж╛ржзрж╛рж░ржг object
// const person = {
//   name: "Nasir",
//   age: 25,
//   job: "Web Developer"
// };

// console.log(person.name); // ржЖржЙржЯржкрзБржЯ: Nasir
// console.log(person["job"]); // ржЖржЙржЯржкрзБржЯ: Web Developer

// ЁЯФН ржПржЦрж╛ржирзЗ:

// person рж╣рж▓рзЛ object

// name, age, job рж╣рж▓рзЛ keys

// "Nasir", 25, "Web Developer" рж╣рж▓рзЛ рждрж╛ржжрзЗрж░ values

// ЁЯзй ржЙржжрж╛рж╣рж░ржг рзи: Object-ржПрж░ ржоржзрзНржпрзЗ function рж░рж╛ржЦрж╛ ржпрж╛рзЯ
// const person = {
//   name: "Nasir",
//   age: 25,
//   greet: function() {
//     console.log("Hello, my name is " + this.name);
//   }
// };

// person.greet(); // ржЖржЙржЯржкрзБржЯ: Hello, my name is Nasir


// ЁЯФ╣ ржПржЦрж╛ржирзЗ greet() ржПржХржЯрж┐ method (ржЕрж░рзНржерж╛рзО object-ржПрж░ ржнрзЗрждрж░рзЗрж░ function)ред
// ЁЯФ╣ this.name ржорж╛ржирзЗ рж╣рж▓рзЛ person object-ржПрж░ name ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ред

// ЁЯзй ржЙржжрж╛рж╣рж░ржг рзй: Constructor ржжрж┐рзЯрзЗ object рждрзИрж░рж┐
// function Person(name, age) {
//   this.name = name;
//   this.age = age;
// }

// const person1 = new Person("Nasir", 25);
// const person2 = new Person("Amin", 30);

// console.log(person1.name); // Nasir


// ЁЯФ╣ ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ constructor ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ object ржмрж╛ржирж┐рзЯрзЗржЫрж┐ред
// ЁЯФ╣ new ржХрзАржУрзЯрж╛рж░рзНржб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ JavaScript ржирждрзБржи object рждрзИрж░рж┐ ржХрж░рзЗред

// ЁЯзй ржЙржжрж╛рж╣рж░ржг рзк: Object рждрзИрж░рж┐ ржХрж░рж╛рж░ ржЕржирзНржп ржЙржкрж╛рзЯ
// // Object literal
// const car = { brand: "Toyota", model: "Corolla" };

// // new Object() ржжрж┐рзЯрзЗ
// const car2 = new Object();
// car2.brand = "Honda";
// car2.model = "Civic";


// ржжрзБржЯрзЛржЗ object, рж╢рзБржзрзБ рждрзИрж░рж┐ ржХрж░рж╛рж░ ржкржжрзНржзрждрж┐ ржЖрж▓рж╛ржжрж╛ред

// ЁЯз╛ Object-ржПрж░ ржзрж░ржи:
// ржзрж░ржи	ржЙржжрж╛рж╣рж░ржг
// Simple Object	{ name: "Nasir", age: 25 }
// Nested Object	{ person: { name: "Nasir", age: 25 } }
// Array of Objects	[ {name: "Nasir"}, {name: "Amin"} ]
// ЁЯУШ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
// ржмрж┐рж╖рзЯ	ржмрзНржпрж╛ржЦрзНржпрж╛
// Object	key-value pair-ржПрж░ рж╕ржВржЧрзНрж░рж╣
// Property	object-ржПрж░ ржнрзЗрждрж░рзЗрж░ рждржерзНржп
// Method	object-ржПрж░ ржнрзЗрждрж░рзЗрж░ function
// this keyword	ржР object-ржХрзЗ ржирж┐рж░рзНржжрзЗрж╢ ржХрж░рзЗ

// ЁЯСЙ ржПржХ ржХржерж╛рзЯ:
// JavaScript-ржПрж░ Object рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж╛ ржХрж╛ржарж╛ржорзЛ ржпрзЗржЦрж╛ржирзЗ ржЖржорж░рж╛ рж╕ржорзНржкрж░рзНржХрж┐ржд ржбрзЗржЯрж╛ ржУ ржХрж╛ржЬ (functionality) ржПржХрж╕рж╛ржерзЗ рж░рж╛ржЦрждрзЗ ржкрж╛рж░рж┐ред
// ржПржЯрж╛ржЗ JavaScript-ржПрж░ рж╕ржмржЪрзЗрзЯрзЗ рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА ржмрзИрж╢рж┐рж╖рзНржЯрзНржпред

// ржЪрж╛ржУ ржХрж┐ ржЖржорж┐ ржкрж░рзЗрж░ ржЕржВрж╢рзЗ тАЬObject vs Array vs FunctionтАЭ рждрзБрж▓ржирж╛ ржХрж░рзЗ рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рж┐, ржпрж╛рждрзЗ ржкрж╛рж░рзНржержХрзНржпржЯрж╛ ржкрж░рж┐рж╖рзНржХрж╛рж░ рж╣рзЯ?

// You said:
// what is DOM , explain benglai 
// ChatGPT said:

// ржЪржорзОржХрж╛рж░ ржкрзНрж░рж╢рзНржи, Nasir! ЁЯМ┐
// JavaScript ржмрзБржЭрждрзЗ рж╣рж▓рзЗ DOM (Document Object Model) ржзрж╛рж░ржгрж╛ржЯрж╛ ржкрж░рж┐рж╖рзНржХрж╛рж░ржнрж╛ржмрзЗ ржЬрж╛ржирж╛ ржЦрзБржм ржжрж░ржХрж╛рж░ред
// ржЪрж▓рзЛ ржзрзАрж░рзЗ ржзрзАрж░рзЗ ржмрзБржЭрзЗ ржирж┐ржЗ ЁЯСЗ

// ЁЯза DOM ржХрзА?

// DOM (Document Object Model) рж╣рж▓рзЛ тАФ

// ржУрзЯрзЗржм ржкрзЗржЬрзЗрж░ ржПржХржЯрж┐ ржЧрж╛ржЫрзЗрж░ ржорждрзЛ (Tree Structure) рж░рзВржк, ржпрзЗржЯрж╛ ржмрзНрж░рж╛ржЙржЬрж╛рж░ рждрзИрж░рж┐ ржХрж░рзЗ, ржпрж╛рждрзЗ JavaScript ржжрж┐рзЯрзЗ рж╕рзЗржЗ ржУрзЯрзЗржм ржкрзЗржЬрзЗрж░ ржЕржВрж╢ржЧрзБрж▓рзЛ ржкрж░рж┐ржмрж░рзНрждржи, ржпрзЛржЧ, ржмрж╛ ржорзБржЫрзЗ ржлрзЗрж▓рж╛ ржпрж╛рзЯред

// ЁЯУД рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрж▓рж▓рзЗ:

// ржпржЦржи рждрзБржорж┐ ржХрзЛржирзЛ HTML ржлрж╛ржЗрж▓ ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ ржЦрзЛрж▓рзЛ,
// ржмрзНрж░рж╛ржЙржЬрж╛рж░ рж╕рзЗржЗ HTML ржХрзЛржбржХрзЗ DOM Tree-ржП рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЗред

// ржПржЗ DOM Tree рж╣рж▓рзЛ JavaScript-ржПрж░ ржЬржирзНржп ржУрзЯрзЗржм ржкрзЗржЬрзЗрж░ ржПржХржЯрж┐ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорзНржпрж╛ржЯрж┐ржХ рж░рзВржк тАФ
// ржЕрж░рзНржерж╛рзО рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ JavaScript ржжрж┐рзЯрзЗ HTML-ржПрж░ ржХрзЛржирзЛ element ржзрж░рждрзЗ, ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ, ржмрж╛ ржЗржирзНржЯрж╛рж░тАМрзНржпрж╛ржХрж╢ржи ржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░рзЛред

// ЁЯМ│ DOM Tree ржПрж░ ржзрж╛рж░ржгрж╛:

// ржЙржжрж╛рж╣рж░ржг рж╣рж┐рж╕рзЗржмрзЗ ржирж┐ржЪрзЗрж░ HTML ржзрж░рзЛ ЁЯСЗ

// <html>
//   <body>
//     <h1>Hello, Nasir!</h1>
//     <p>This is a paragraph.</p>
//   </body>
// </html>


// ржПржЦржи ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржПржЯрж╛ ржкрзЬрзЗ ржПржХржЯрж╛ DOM Tree ржмрж╛ржирж╛ржмрзЗ ржПржнрж╛ржмрзЗ ЁЯСЗ

// Document
//  тФФтФАтФА html
//       тФФтФАтФА body
//            тФЬтФАтФА h1
//            тФВ     тФФтФАтФА "Hello, Nasir!"
//            тФФтФАтФА p
//                  тФФтФАтФА "This is a paragraph."

// тЪЩя╕П JavaScript ржжрж┐рзЯрзЗ DOM ржорзНржпрж╛ржирж┐ржкрзБрж▓рзЗрж╢ржи:

// рждрзБржорж┐ ржПржЗ DOM-ржПрж░ element ржЧрзБрж▓рзЛ JavaScript ржжрж┐рзЯрзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░рзЛред

// тЬПя╕П ржЙржжрж╛рж╣рж░ржг рзз: ржХрзЛржирзЛ element ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛
// document.getElementById("title").innerHTML = "Welcome Nasir!";

// тЬПя╕П ржЙржжрж╛рж╣рж░ржг рзи: ржирждрзБржи element ржпрзЛржЧ ржХрж░рж╛
// const newPara = document.createElement("p");
// newPara.textContent = "This paragraph is added by JavaScript!";
// document.body.appendChild(newPara);

// тЬПя╕П ржЙржжрж╛рж╣рж░ржг рзй: рж╕рзНржЯрж╛ржЗрж▓ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛
// document.querySelector("h1").style.color = "blue";

// ЁЯзй DOM-ржПрж░ ржкрзНрж░ржзрж╛ржи ржЕржВрж╢ржЧрзБрж▓рзЛ:
// ржЕржВрж╢	ржХрж╛ржЬ
// Document	ржкрзБрж░рзЛ HTML ржбржХрзБржорзЗржирзНржЯрзЗрж░ рж░рзБржЯ (ржорзВрж▓) ржЕржмржЬрзЗржХрзНржЯ
// Element	HTML ржЯрзНржпрж╛ржЧ ржпрзЗржоржи <div>, <p>, <h1> ржЗрждрзНржпрж╛ржжрж┐
// Attribute	HTML ржЯрзНржпрж╛ржЧрзЗрж░ ржЕрзНржпрж╛ржЯрзНрж░рж┐ржмрж┐ржЙржЯ ржпрзЗржоржи id, class, src ржЗрждрзНржпрж╛ржжрж┐
// Text Node	ржЯрзНржпрж╛ржЧрзЗрж░ ржнрж┐рждрж░рзЗрж░ рж▓рзЗржЦрж╛
// Node Tree	рж╕ржм element ржУ text node ржорж┐рж▓рзЗ рждрзИрж░рж┐ ржЧрж╛ржЫрзЗрж░ ржорждрзЛ ржЧржаржи
// ЁЯза ржХрзЗржи DOM ржжрж░ржХрж╛рж░?

// ЁЯСЙ DOM ржирж╛ ржерж╛ржХрж▓рзЗ JavaScript ржУрзЯрзЗржм ржкрзЗржЬрзЗрж░ ржХрзЛржирзЛ ржЕржВрж╢рзЗ рж╣рж╛ржд ржжрж┐рждрзЗ ржкрж╛рж░ржд ржирж╛ред
// DOM ржерж╛ржХрж╛рж░ ржХрж╛рж░ржгрзЗ JavaScript ржжрж┐рзЯрзЗ ржЖржорж░рж╛ ржкрж╛рж░рж┐:

// ржЯрзЗржХрзНрж╕ржЯ, ржЗржорзЗржЬ, ржмрж╛ржЯржи ржЗрждрзНржпрж╛ржжрж┐ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ

// ржирждрзБржи HTML ржПрж▓рж┐ржорзЗржирзНржЯ ржпрзЛржЧ ржмрж╛ ржорзБржЫрзЗ ржлрзЗрж▓рждрзЗ

// ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржирзНржЯрж╛рж░тАМрзНржпрж╛ржХрж╢ржи (ржпрзЗржоржи click, input) ржзрж░рждрзЗ

// ржУрзЯрзЗржм ржкрзЗржЬржХрзЗ ржбрж╛ржЗржирж╛ржорж┐ржХ (Dynamic) ржмрж╛ржирж╛рждрзЗ

// ЁЯУШ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
// ржмрж┐рж╖рзЯ	ржмрзНржпрж╛ржЦрзНржпрж╛
// DOM	HTML ржбржХрзБржорзЗржирзНржЯрзЗрж░ ржЧрж╛ржЫрзЗрж░ ржорждрзЛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░
// Purpose	JavaScript ржжрж┐рзЯрзЗ HTML ржУ CSS ржирж┐рзЯржирзНрждрзНрж░ржг ржХрж░рж╛
// Example	document.getElementById(), querySelector(), appendChild()
// Nature	Dynamic тАУ ржорж╛ржирзЗ ржкрзЗржЬ рж░рж┐ржлрзНрж░рзЗрж╢ ржирж╛ ржХрж░рзЗржЗ ржкрж░рж┐ржмрж░рзНрждржи рж╕ржорзНржнржм

// ЁЯМ╝ ржПржХ ржХржерж╛рзЯ:

// DOM рж╣рж▓рзЛ ржУрзЯрзЗржм ржкрзЗржЬрзЗрж░ "ржЬрзАржмржирзНржд ржЕржмржЬрзЗржХрзНржЯ рж░рзВржк",
// ржпрж╛рж░ ржорж╛ржзрзНржпржорзЗ JavaScript ржУрзЯрзЗржм ржкрзЗржЬрзЗрж░ ржпрзЗржХрзЛржирзЛ ржЕржВрж╢рзЗ рж╣рж╛ржд ржжрж┐рждрзЗ ржкрж╛рж░рзЗред
